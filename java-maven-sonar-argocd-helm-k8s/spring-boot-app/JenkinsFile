pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        echo 'Checkout the repo'
        git branch: 'main', url: 'https://github.com/akash-anchi/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        echo 'Building and testing the project'
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://35.154.193.189:9000"
      }
      steps {
        echo 'Running static code analysis'
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE_ABHISHEK = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
        DOCKER_IMAGE_IN29MINS = "in29mins/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          echo "Pulling image from Abhishek's Docker Hub..."
          // Pull image from Abhishek's repository
          sh "docker pull ${DOCKER_IMAGE_ABHISHEK}"

          echo "Tagging image for your Docker Hub..."
          // Tag the image with your Docker Hub repository
          sh "docker tag ${DOCKER_IMAGE_ABHISHEK} ${DOCKER_IMAGE_IN29MINS}"

          echo "Pushing image to your Docker Hub repository..."
          // Push the image to your Docker Hub repository
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            sh "docker push ${DOCKER_IMAGE_IN29MINS}"
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "akash-anchi"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          echo "Updating deployment file with build number"
          sh '''
            git config user.email "akash.anchi@example.com"
            git config user.name "Akash Anchi"
            BUILD_NUMBER=${BUILD_NUMBER}
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
