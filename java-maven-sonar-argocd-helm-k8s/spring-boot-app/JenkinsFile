pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'myimage'
        DOCKER_REGISTRY = 'docker.io'
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials')  // Update the credential ID if needed
    }
    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image using Dockerfile from spring-boot-app directory
                    sh 'docker build -t $DOCKER_IMAGE ./java-maven-sonar-argocd-helm-k8s/spring-boot-app'
                }
            }
        }

        stage('Login to Docker Registry') {
            steps {
                script {
                    // Login to Docker registry
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push Docker image to Docker registry
                    sh "docker tag $DOCKER_IMAGE $DOCKER_REGISTRY/$DOCKER_USERNAME/$DOCKER_IMAGE"
                    sh "docker push $DOCKER_REGISTRY/$DOCKER_USERNAME/$DOCKER_IMAGE"
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                script {
                    // Update the deployment file as needed
                    echo 'Updating deployment file...'
                    // Add your logic for deployment update here
                }
            }
        }
    }
    post {
        always {
            // Clean up Docker containers/images if necessary
            sh 'docker system prune -f'
        }
    }
}
